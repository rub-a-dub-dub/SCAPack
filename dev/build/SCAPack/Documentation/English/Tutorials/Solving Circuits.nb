(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     24034,        775]
NotebookOptionsPosition[     18424,        604]
NotebookOutlinePosition[     20996,        667]
CellTagsIndexPosition[     20953,        664]
WindowTitle->Solving Circuits - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["S C A PACK TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Related Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Netlists\"\>":>Documentation`HelpLookup[
       "paclet:SCAPack/tutorial/Netlists"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Noise Analysis\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/guide/NoiseAnalysis"], "\<\"Statistical Analysis\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/tutorial/Statistical Analysis"], "\<\"Approximating \
Transfer Functions\"\>":>Documentation`HelpLookup[
       "paclet:SCAPack/guide/ApproximateTransferFunctions"], "\<\"Simple \
Circuit Analysis Package\"\>":>Documentation`HelpLookup[
       "paclet:SCAPack/guide/Simple Circuit Analysis Package"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Functions \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"GetInputImpedance\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/ref/GetInputImpedance"], "\<\"GetNoisePSD\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/ref/GetNoisePSD"], "\<\"GetSolveVariables\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/ref/GetSolveVariables"], "\<\"GetTotalNoisePSD\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/ref/GetTotalNoisePSD"], "\<\"GetTransferFunction\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/ref/GetTransferFunction"], \
"\<\"GetZVTimeConstants\"\>":>Documentation`HelpLookup[
       "paclet:SCAPack/ref/GetZVTimeConstants"], "\<\"NetlistCircuit\"\>":>
       Documentation`HelpLookup[
       "paclet:SCAPack/ref/NetlistCircuit"], "\<\"SolveFullSystem\"\>":>
       Documentation`HelpLookup["paclet:SCAPack/ref/SolveFullSystem"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"SCAPack/tutorial/Solving Circuits\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["SCAPack/tutorial/Solving Circuits"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/SCAPack/tutorial/\
Solving Circuits.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "SCAPack/tutorial/Solving Circuits", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["Solving Circuits", "Title",
 CellID->509267359],

Cell["\<\
SCAPack has a number of functions to automate the solving of simple circuits. \
Users may choose the level of automation desired: from fully automated \
transfer function determination to user driven equation solving.\
\>", "Text",
 CellID->523608500],

Cell["First load the package:", "MathCaption",
 CellID->2024993459],

Cell[BoxData[
 RowBox[{"<<", "SCAPack`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->744227757],

Cell[CellGroupData[{

Cell["Manually Solving Circuits", "Section",
 CellID->797249815],

Cell[TextData[{
 "If so desired, users may manually solve a circuit by using SCAPack to \
convert a netlist into a system of equations. Routines to automatically \
determine the various variables or even to automatically execute ",
 ButtonBox["Solve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Solve"],
 " are available to aide the user."
}], "Text",
 CellID->1227167072],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["NetlistCircuit",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/NetlistCircuit"], "[", 
     StyleBox["netlist", "TI"], "]"}], Cell[TextData[{
     "converts the ",
     StyleBox["netlist", "TI"],
     " into a system of equations"
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["GetSolveVariables",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/GetSolveVariables"], "[", 
     StyleBox["netlist", "TI"], "]"}], Cell[TextData[{
     "returns a list of all variables in the ",
     StyleBox["netlist", "TI"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["SolveFullSystem",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/SolveFullSystem"], "[", 
     StyleBox["netlist", "TI"], "]"}], Cell[TextData[{
     "automatically solves the ",
     StyleBox["netlist", "TI"],
     " for all of the identified variables"
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2096742444],

Cell["Manual circuit solving operations.", "Caption",
 CellID->1891092685],

Cell["This is the netlist for a R-2R ladder", "MathCaption",
 CellID->836781195],

Cell[BoxData[
 RowBox[{
  RowBox[{"ladderNetlist", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<volt\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"vin", ",", "0"}], "}"}], ",", "\"\<v1\>\"", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<res\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"vin", ",", "vx"}], "}"}], ",", "\"\<r1\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Gvalue", "\[Rule]", 
         RowBox[{"1", "/", "R"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<res\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"vx", ",", "0"}], "}"}], ",", "\"\<r2\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Gvalue", "\[Rule]", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", "R"}], ")"}]}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<res\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"vx", ",", "vout"}], "}"}], ",", "\"\<r3\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Gvalue", "\[Rule]", 
         RowBox[{"1", "/", "R"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<res\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"vout", ",", "0"}], "}"}], ",", "\"\<r4\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Gvalue", "\[Rule]", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", "R"}], ")"}]}]}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2058623809],

Cell["\<\
Using NetlistCircuit one can convert the R-2R ladder into a system of \
equations\
\>", "MathCaption",
 CellID->715124154],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ladderEqns", "=", 
  RowBox[{"NetlistCircuit", "[", "ladderNetlist", "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->564033316],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"I$v1", "+", 
     FractionBox[
      RowBox[{"vin", "-", "vx"}], "R"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"vin", "-", "vx"}], "R"]}], "+", 
     FractionBox["vx", 
      RowBox[{"2", " ", "R"}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "vout"}], "+", "vx"}], "R"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["vout", 
      RowBox[{"2", " ", "R"}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "vout"}], "+", "vx"}], "R"]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 ImageSize->{502, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->616482129]
}, Open  ]],

Cell["\<\
GetSolveVariables can be used to determine the solver variables\
\>", "MathCaption",
 CellID->1773167666],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ladderVars", "=", 
  RowBox[{"GetSolveVariables", "[", "ladderNetlist", "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->998393043],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"I$v1", ",", "vout", ",", "vx"}], "}"}]], "Output",
 ImageSize->{112, 12},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->1754028975]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s built-in operators may now be used to solve the system"
}], "MathCaption",
 CellID->1702139690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"ladderEqns", ",", "ladderVars"}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1232108143],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"I$v1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"5", " ", "vin"}], 
       RowBox[{"11", " ", "R"}]]}]}], ",", 
    RowBox[{"vout", "\[Rule]", 
     FractionBox[
      RowBox[{"4", " ", "vin"}], "11"]}], ",", 
    RowBox[{"vx", "\[Rule]", 
     FractionBox[
      RowBox[{"6", " ", "vin"}], "11"]}]}], "}"}], "}"}]], "Output",
 ImageSize->{294, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->1456960456]
}, Open  ]],

Cell["SCAPack methods may be used instead to achieve the same ends", \
"MathCaption",
 CellID->2004235027],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveFullSystem", "[", "ladderNetlist", "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1897095594],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"I$v1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"5", " ", "vin"}], 
       RowBox[{"11", " ", "R"}]]}]}], ",", 
    RowBox[{"vout", "\[Rule]", 
     FractionBox[
      RowBox[{"4", " ", "vin"}], "11"]}], ",", 
    RowBox[{"vx", "\[Rule]", 
     FractionBox[
      RowBox[{"6", " ", "vin"}], "11"]}]}], "}"}], "}"}]], "Output",
 ImageSize->{294, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->347665421]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Automated Solvers", "Section",
 CellID->795941349],

Cell["\<\
SCAPack provides several methods to automatically determine performance \
metrics for a given netlist. Automation is provided for matters as simple as \
determining the transfer function of a netlist, to more advanced methods such \
as zero-value time constant analysis.\
\>", "Text",
 CellID->710615480],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GetTransferFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/GetTransferFunction"], "[", 
     RowBox[{
      StyleBox["netlist", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        StyleBox["output", "TI"], ",", 
        StyleBox["input", "TI"]}], "}"}]}], "]"}], Cell["\<\
returns the transfer function betweent the output and input variables\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["GetInputImpedance",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/GetInputImpedance"], "[", 
     RowBox[{
      StyleBox["netlist", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        StyleBox["output", "TI"], ",", 
        StyleBox["input", "TI"]}], "}"}]}], "]"}], Cell[TextData[{
     "computes the impedance seen between the terminals ",
     StyleBox["output", "TI"],
     " and ",
     StyleBox["input", "TI"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["GetNoisePSD",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/GetNoisePSD"], "[", 
     RowBox[{
      StyleBox["netlist", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        StyleBox["output", "TI"], ",", 
        StyleBox["ref", "TI"]}], "}"}], ",", 
      StyleBox["source", "TI"]}], "]"}], Cell[TextData[{
     "determines the single-sided noise power spectral density caused by the ",
     StyleBox["source", "TI"],
     " seen at the nodes ",
     StyleBox["output", "TI"],
     " and ",
     StyleBox["ref", "TI"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["GetTotalNoisePSD",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/GetTotalNoisePSD"], "[", 
     RowBox[{
      StyleBox["netlist", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        StyleBox["output", "TI"], ",", 
        StyleBox["ref", "TI"]}], "}"}]}], "]"}], Cell[TextData[{
     "determines the single-sided noise power spectral density due to all \
noise sources seen at the nodes ",
     StyleBox["output", "TI"],
     " and ",
     StyleBox["ref", "TI"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["GetZVTimeConstants",
      BaseStyle->"Link",
      ButtonData->"paclet:SCAPack/ref/GetZVTimeConstants"], "[", 
     StyleBox["netlist", "TI"], "]"}], Cell["\<\
uses the method of zero-value time constant analysis to determine the \
approximate pole locations in a netlist\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1157811393],

Cell["Automated circuit solver operations.", "Caption",
 CellID->986756684],

Cell["\<\
A common operation for most circuit analysis is to determine the input-output \
transfer function between two separate circuit variables.\
\>", "Text",
 CellID->304776438],

Cell["This is the R-2R ladder's voltage transfer function", "MathCaption",
 CellID->1550865854],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetTransferFunction", "[", 
  RowBox[{"ladderNetlist", ",", 
   RowBox[{"{", 
    RowBox[{"vout", ",", "vin"}], " ", "}"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1393384539],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox["4", "11"], "}"}]], "Output",
 ImageSize->{37, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->2057210907]
}, Open  ]],

Cell[TextData[{
 "While ",
 ButtonBox["GetTransferFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:SCAPack/ref/GetTransferFunction"],
 " may be used interchangeably with the manual solution method shown above, \
the other analysis methods are able to automate more complex tasks, such as \
disabling independent sources to compute the input impedance or determining \
the circuit's approximate pole locations."
}], "Text",
 CellID->1143906216],

Cell["\<\
The ladder's input impedance may be determined at arbitrary nodes\
\>", "MathCaption",
 CellID->1358164368],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GetInputImpedance", "[", 
  RowBox[{"ladderNetlist", ",", 
   RowBox[{"{", 
    RowBox[{"vout", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"GetInputImpedance", "[", 
  RowBox[{"ladderNetlist", ",", 
   RowBox[{"{", 
    RowBox[{"vx", ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[7]:=",
 CellID->1064849013],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"10", " ", "R"}], "11"], "}"}]], "Output",
 ImageSize->{47, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->1056997249],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"6", " ", "R"}], "11"], "}"}]], "Output",
 ImageSize->{40, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->968035959]
}, Open  ]],

Cell["\<\
In order to perform noise analysis, a noise source needs to exist in the \
network. The Noise Analysis guide discusses this analysis in more detail.\
\>", "Text",
 CellID->1936131040]
}, Open  ]],

Cell[CellGroupData[{

Cell["MORE ABOUT", "TutorialMoreAboutSection",
 CellID->23220180],

Cell[TextData[ButtonBox["Noise Analysis",
 BaseStyle->"Link",
 ButtonData->"paclet:SCAPack/guide/NoiseAnalysis"]], "TutorialMoreAbout",
 CellID->1567025153],

Cell[TextData[ButtonBox["Statistical Analysis",
 BaseStyle->"Link",
 ButtonData->
  "paclet:SCAPack/tutorial/Statistical Analysis"]], "TutorialMoreAbout",
 CellID->576517309],

Cell[TextData[ButtonBox["Approximating Transfer Functions",
 BaseStyle->"Link",
 ButtonData->
  "paclet:SCAPack/guide/ApproximateTransferFunctions"]], "TutorialMoreAbout",
 CellID->1882169936],

Cell[TextData[ButtonBox["Simple Circuit Analysis Package",
 BaseStyle->"Link",
 ButtonData->
  "paclet:SCAPack/guide/Simple Circuit Analysis Package"]], \
"TutorialMoreAbout",
 CellID->1911064515]
}, Open  ]],

Cell[CellGroupData[{

Cell["RELATED TUTORIALS", "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell[TextData[ButtonBox["Netlists",
 BaseStyle->"Link",
 ButtonData->"paclet:SCAPack/tutorial/Netlists"]], "RelatedTutorials",
 CellID->806871991]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Solving Circuits - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:SCAPack/guide/SCAPack", 
         BaseStyle -> {"Link", "DockedLinkTrail"}], 
        Cell[">", "DockedLinkTrailSeparator"]}]}}, ColumnAlignments -> Left], 
  "Metadata" -> {
   "built" -> "{2012, 12, 9, 18, 21, 43.501220}", 
    "history" -> {"0.1", "", "", ""}, "context" -> "SCAPack`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "S C A Pack Tutorial", "language" -> "en", "paclet" -> "SCAPack", 
    "status" -> "None", "summary" -> 
    "SCAPack has a number of functions to automate the solving of simple \
circuits. Users may choose the level of automation desired: from fully \
automated transfer function determination to user driven equation solving. \
First load the package: If so desired, users may manually solve a circuit by \
using SCAPack to convert a netlist into a system of equations. Routines to \
automatically determine the various variables or even to automatically \
execute Solve are available to aide the user.", "synonyms" -> {}, "title" -> 
    "Solving Circuits", "titlemodifier" -> "", "windowtitle" -> 
    "Solving Circuits", "type" -> "Tutorial", "uri" -> 
    "SCAPack/tutorial/Solving Circuits"}, "SearchTextTranslated" -> ""},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, 2011)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[609, 21, 4153, 90, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[4787, 115, 53, 1, 70, "Title",
 CellID->509267359],
Cell[4843, 118, 261, 5, 70, "Text",
 CellID->523608500],
Cell[5107, 125, 67, 1, 70, "MathCaption",
 CellID->2024993459],
Cell[5177, 128, 95, 3, 70, "Input",
 CellID->744227757],
Cell[CellGroupData[{
Cell[5297, 135, 64, 1, 70, "Section",
 CellID->797249815],
Cell[5364, 138, 376, 9, 70, "Text",
 CellID->1227167072],
Cell[5743, 149, 1000, 31, 70, "DefinitionBox",
 CellID->2096742444],
Cell[6746, 182, 74, 1, 70, "Caption",
 CellID->1891092685],
Cell[6823, 185, 80, 1, 70, "MathCaption",
 CellID->836781195],
Cell[6906, 188, 1653, 47, 70, "Input",
 CellID->2058623809],
Cell[8562, 237, 132, 4, 70, "MathCaption",
 CellID->715124154],
Cell[CellGroupData[{
Cell[8719, 245, 154, 4, 70, "Input",
 CellID->564033316],
Cell[8876, 251, 791, 29, 70, "Output",
 CellID->616482129]
}, Open  ]],
Cell[9682, 283, 115, 3, 70, "MathCaption",
 CellID->1773167666],
Cell[CellGroupData[{
Cell[9822, 290, 157, 4, 70, "Input",
 CellID->998393043],
Cell[9982, 296, 222, 7, 70, "Output",
 CellID->1754028975]
}, Open  ]],
Cell[10219, 306, 165, 5, 70, "MathCaption",
 CellID->1702139690],
Cell[CellGroupData[{
Cell[10409, 315, 143, 4, 70, "Input",
 CellID->1232108143],
Cell[10555, 321, 552, 19, 70, "Output",
 CellID->1456960456]
}, Open  ]],
Cell[11122, 343, 106, 2, 70, "MathCaption",
 CellID->2004235027],
Cell[CellGroupData[{
Cell[11253, 349, 124, 3, 70, "Input",
 CellID->1897095594],
Cell[11380, 354, 551, 19, 70, "Output",
 CellID->347665421]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11980, 379, 56, 1, 70, "Section",
 CellID->795941349],
Cell[12039, 382, 314, 6, 70, "Text",
 CellID->710615480],
Cell[12356, 390, 2459, 76, 70, "DefinitionBox",
 CellID->1157811393],
Cell[14818, 468, 75, 1, 70, "Caption",
 CellID->986756684],
Cell[14896, 471, 181, 4, 70, "Text",
 CellID->304776438],
Cell[15080, 477, 95, 1, 70, "MathCaption",
 CellID->1550865854],
Cell[CellGroupData[{
Cell[15200, 482, 210, 6, 70, "Input",
 CellID->1393384539],
Cell[15413, 490, 203, 7, 70, "Output",
 CellID->2057210907]
}, Open  ]],
Cell[15631, 500, 448, 10, 70, "Text",
 CellID->1143906216],
Cell[16082, 512, 117, 3, 70, "MathCaption",
 CellID->1358164368],
Cell[CellGroupData[{
Cell[16224, 519, 359, 10, 70, "Input",
 CellID->1064849013],
Cell[16586, 531, 228, 8, 70, "Output",
 CellID->1056997249],
Cell[16817, 541, 226, 8, 70, "Output",
 CellID->968035959]
}, Open  ]],
Cell[17058, 552, 193, 4, 70, "Text",
 CellID->1936131040]
}, Open  ]],
Cell[CellGroupData[{
Cell[17288, 561, 65, 1, 70, "TutorialMoreAboutSection",
 CellID->23220180],
Cell[17356, 564, 156, 3, 70, "TutorialMoreAbout",
 CellID->1567025153],
Cell[17515, 569, 174, 4, 70, "TutorialMoreAbout",
 CellID->576517309],
Cell[17692, 575, 192, 4, 70, "TutorialMoreAbout",
 CellID->1882169936],
Cell[17887, 581, 196, 5, 70, "TutorialMoreAbout",
 CellID->1911064515]
}, Open  ]],
Cell[CellGroupData[{
Cell[18120, 591, 101, 2, 70, "RelatedTutorialsSection",
 CellID->415694126],
Cell[18224, 595, 146, 3, 70, "RelatedTutorials",
 CellID->806871991]
}, Open  ]]
}, Open  ]],
Cell[18397, 602, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)
